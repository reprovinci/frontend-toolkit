$flexgrid-gap: 1em;

@mixin flexgrid ($gap: $flexgrid-gap) {
  display: flex;
  flex-wrap: wrap;
  margin: -$gap;

  > * {
    flex: 1 1 100%;
    margin: $gap;
    @media screen and (min-width: $breakpoint-xs) {
      flex: 0 0 calc(50% - #{$flexgrid-gap * 2});
    }
  }

  &._reverse {
    flex-direction: row-reverse;
  }

  &._center {
    justify-content: center;
  }

  &._flex-start {
    justify-content: flex-start;
  }

  &._flex-end {
    justify-content: flex-end;
  }

  &._space-around {
    justify-content: space-around;
  }

  &._space-between {
    justify-content: space-between;
  }
}

.flexgrid-2 {
  @include flexgrid;
}

.flexgrid-3 {
  @include flexgrid;

  > * {
    @media screen and (min-width: $breakpoint-sm) {
      flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
    }
  }
}

.flexgrid-4 {
  @include flexgrid;

  > * {
    @media screen and (min-width: $breakpoint-sm) {
      flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
    }
    @media screen and (min-width: $breakpoint-md) {
      flex: 0 0 calc(25% - #{$flexgrid-gap * 2});
    }
  }
}

.flexgrid-shuffle {
  @include flexgrid;
  > * {
    @media screen and (min-width: $breakpoint-sm) {
      &:nth-child(6n - 2),
      &:nth-child(6n - 5) {
        flex: 0 0 calc(66.6666% - #{$flexgrid-gap * 2});
      }
      &:nth-child(6n - 3),
      &:nth-child(6n - 4) {
        flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
      }
    }
  }
}