$flexgrid-gap: $space-2;

@mixin flexgrid($gap: $flexgrid-gap) {
  display: flex;
  flex-wrap: wrap;
  margin: -$gap;

  > * {
    flex: 1 1 100%;
    margin: $gap;
    @include media-breakpoint-up('sm') {
      flex: 0 0 calc(50% - #{$flexgrid-gap * 2});
    }
  }

  &._reverse {
    flex-direction: row-reverse;
  }

  &._center {
    justify-content: center;
  }

  &._flex-start {
    justify-content: flex-start;
  }

  &._flex-end {
    justify-content: flex-end;
  }

  &._space-around {
    justify-content: space-around;
  }

  &._space-between {
    justify-content: space-between;
  }
}

.flexgrid-2 {
  @include flexgrid;
}

.flexgrid-3 {
  @include flexgrid;

  > * {
    @include media-breakpoint-up('md') {
      flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
    }
  }
}

.flexgrid-4 {
  @include flexgrid;

  > * {
    @include media-breakpoint-up('md') {
      flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
    }
    @include media-breakpoint-up('lg') {
      flex: 0 0 calc(25% - #{$flexgrid-gap * 2});
    }
  }
}

.flexgrid-bricks {
  @include flexgrid;

  > * {
    flex: 0 0 calc(60% - #{$flexgrid-gap * 2});

    &:nth-child(4n - 1),
    &:nth-child(4n - 2) {
      flex: 0 0 calc(40% - #{$flexgrid-gap * 2});
    }

    @include media-breakpoint-up('sm') {
      &:nth-child(6n - 2),
      &:nth-child(6n - 5) {
        flex: 0 0 calc(66.6666% - #{$flexgrid-gap * 2});
      }

      &:nth-child(6n - 3),
      &:nth-child(6n - 4) {
        flex: 0 0 calc(33.3333% - #{$flexgrid-gap * 2});
      }
    }
  }
}
