//
// responsive 24 column grid
// demo: https://codepen.io/mcbrwr/pen/gOPaEvK
//

// editable vars:
$grid-columns: 24 !default;
$grid-width: $site-width !default;
$grid-split-breakpoint: $breakpoint-sm !default;
$grid-container-breakpoint: $breakpoint-md !default;
$grid-container-pad: 0 !default; // the columns to pad for the default container
$grid-container-sm-pad: 2 !default; // the columns to pad for the sm container
$grid-container-xs-pad: 4 !default; // the columns to pad for the xs container

// these vars need some care when changing: 1 needs to be flex, the other can be fixed
$grid-padding: $site-padding !default;
$grid-spacer: minmax(0, calc(50% - #{$grid-width} / 2 - #{$grid-padding})) !default;

@mixin grid($columns: $grid-columns, $c1: $grid-padding, $c2: $grid-spacer) {
  display: grid;
  grid-template-columns: $c1 $c2 repeat(#{$columns}, 1fr) $c2 $c1;
}

// grid placement mixin
// start counting at container borders
@mixin grid-pos($col-start:1, $col-span:1, $row-start:none, $row-span:none) {
  grid-column-start: ($col-start + 2);
  grid-column-end: span $col-span;
  @if $row-start != none {
    grid-row-start: $row-start;
  }
  @if $row-span != none {
    grid-row-end: span $row-span;
  }
}
//start counting at first column
@mixin grid-abspos($col-start:1, $col-span:1, $row-start:none, $row-span:none) {
  grid-column-start: $col-start;
  grid-column-end: span $col-span;
  @if $row-start != none {
    grid-row-start: $row-start;
  }
  @if $row-span != none {
    grid-row-end: span $row-span;
  }
}

.grid {
  @include grid;
}

.grid__full {
  // container to full viewport width
  @include grid-abspos(1,28);
}

.grid__extended {
  // extended width container
  @include grid-abspos(2,26);
}

.grid__container {
  // default width container
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-container-breakpoint) {
    @include grid-pos((1 + $grid-container-pad), ($grid-columns - $grid-container-pad - $grid-container-pad));
  }
}

.grid__container--sm {
  // slightly smaller container, padded 1 column by default
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-container-breakpoint) {
    @include grid-pos((1 + $grid-container-sm-pad), ($grid-columns - $grid-container-sm-pad - $grid-container-sm-pad));
  }
}

.grid__container--xs {
  // slightly smaller container
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-container-breakpoint) {
    @include grid-pos((1 + $grid-container-xs-pad), ($grid-columns - $grid-container-xs-pad - $grid-container-xs-pad));
  }
}

.grid__left {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-pos(1,12,1,1);
  }
}

.grid__right {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-pos(13,12,1,1);
  }
}

.grid__left-extended {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-abspos(2,13,1,1);
  }
}

.grid__right-extended {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-pos(13,13,1,1);
  }
}

.grid__left-full {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-abspos(1,14,1,1);
  }
}

.grid__right-full {
  @include grid-pos(1,24);
  @media screen and (min-width: $grid-split-breakpoint) {
    @include grid-pos(13,14,1,1);
  }
}
